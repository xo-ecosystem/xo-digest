repos:
  - repo: https://github.com/psf/black
    rev: 25.1.0
    hooks:
      - id: black
        pass_filenames: true
        stages: ["pre-commit", "pre-push", "manual"]

  - repo: https://github.com/PyCQA/isort
    rev: 6.0.1
    hooks:
      - id: isort
        stages: ["pre-commit", "pre-push", "manual"]

  - repo: https://github.com/pycqa/flake8
    rev: 7.2.0
    hooks:
      - id: flake8
        args: ["--exit-zero"]
        stages: ["pre-commit", "pre-push", "manual"]

  - repo: https://github.com/asottile/pyupgrade
    rev: v3.20.0
    hooks:
      - id: pyupgrade
        args: ["--py37-plus"]
        stages: ["pre-commit", "pre-push", "manual"]

  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.17.2
    hooks:
      - id: commitizen
        stages: [commit-msg]

  - repo: local
    hooks:
      - id: coverage-check
        name: Check Coverage
        entry: bash -c 'coverage run -m pytest && coverage report --fail-under=80'
        language: system
        types: [python]
        always_run: true
        stages: [pre-commit, pre-push, manual]

      - id: pytest-check
        name: Run tests
        entry: pytest --tb=short --disable-warnings
        language: system
        pass_filenames: false
        always_run: true
        stages: [pre-commit, pre-push, manual]

      - id: coverage-badge
        name: Generate Coverage Badge
        entry: >
          bash -c 'coverage-badge -o coverage.svg -f &&
          git add coverage.svg &&
          git diff --cached --quiet || git commit -m "ðŸ”– Update coverage badge" --no-verify'
        language: system
        types: [python]
        always_run: true
        stages: [manual]
